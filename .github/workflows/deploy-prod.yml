name: Production Deployment

on:
  push:
    branches: [ main ]

# 環境変数
env:
  DATASET_PREFIX: vege
  BQ_LOCATION: US

jobs:
  # CIイメージビルド
  build-ci-image:
    name: Build & Push CI Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.meta.outputs.image }}
    steps:
      - uses: actions/checkout@v4

      - name: Derive names
        id: names
        run: |
          OWNER="${GITHUB_REPOSITORY%%/*}"
          REPO="${GITHUB_REPOSITORY##*/}"
          OWNER_L=$(echo "$OWNER" | tr '[:upper:]' '[:lower:]')
          REPO_L=$(echo "$REPO"  | tr '[:upper:]' '[:lower:]')

          IMAGE_SHA="ghcr.io/${OWNER_L}/${REPO_L}-ci:${GITHUB_SHA}"
          IMAGE_LATEST="ghcr.io/${OWNER_L}/${REPO_L}-ci:latest"

          echo "owner=${OWNER_L}"   >> "$GITHUB_OUTPUT"
          echo "repo=${REPO_L}"     >> "$GITHUB_OUTPUT"
          echo "image=${IMAGE_SHA}" >> "$GITHUB_OUTPUT"
          echo "latest=${IMAGE_LATEST}" >> "$GITHUB_OUTPUT"

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          no-cache: true
          tags: |
            ${{ steps.names.outputs.image }}
            ${{ steps.names.outputs.latest }}

      - id: meta
        name: Export image URI
        run: echo "image=${{ steps.names.outputs.image }}" >> "$GITHUB_OUTPUT"

  # TerraformのPlanでインフラ差分を確認
  terraform-test:
    name: Terraform Test
    runs-on: ubuntu-latest
    needs: [build-ci-image]
    permissions:
      contents: read
      packages: read
    container:
      image: ${{ needs['build-ci-image'].outputs.image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # GCP認証
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Terraformキャッシュクリア
      - name: Clear Terraform Cache
        run: |
          rm -rf terraform/.terraform
          rm -f terraform/.terraform.lock.hcl

      # Terraform初期化
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      #既存との差分を確認
      - name: Terraform Plan
        working-directory: ./terraform
        env:
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_environment: prod
          TF_VAR_dataset_prefix: ${{ env.DATASET_PREFIX }}
          TF_VAR_region: us-central1
          TF_VAR_bq_location: ${{ env.BQ_LOCATION }}
        run: terraform plan

  validate-syntax:
    name: validate syntax
    runs-on: ubuntu-latest
    needs: [build-ci-image]
    permissions:
      contents: read
      packages: read
    container:
      image: ${{ needs['build-ci-image'].outputs.image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # dbt構文チェック
      - name: Validate dbt syntax
        working-directory: ./dbt
        run: |
          dbt deps
          dbt parse --profiles-dir /dev/null --target dev || true
          echo "dbt構文チェック完了"

      # Python スクリプト構文チェック
      - name: Validate Python scripts
        run: |
          python -m py_compile scripts/*.py
          echo "Pythonスクリプト構文チェック完了"

